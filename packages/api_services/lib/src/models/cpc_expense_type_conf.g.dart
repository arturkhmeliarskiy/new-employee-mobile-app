// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'cpc_expense_type_conf.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

CpcExpenseTypeConf _$CpcExpenseTypeConfFromJson(Map<String, dynamic> json) =>
    CpcExpenseTypeConf(
      json['id'] as String?,
      json['sfRecordId'] as String?,
      json['sfLEId'] as String?,
      json['sfOrgId'] as String?,
      json['aCPAddPerHour'] as bool?,
      json['aCPSpecificComponent1'] as bool?,
      json['aCPSpecificComponent2'] as bool?,
      json['active'] as bool?,
      json['additionalRows'] as String?,
      json['allocation'] as String?,
      json['allowed_Days_of_Week'] as String?,
      json['allowed_Number_of_Days'] as int?,
      json['cAOAanvullingZiektewet'] as bool?,
      json['cAOScholing'] as bool?,
      json['cAOSocialFounds'] as bool?,
      json['cCPAddPerHour'] as bool?,
      json['cCPAdditionOfAgencyFactor'] as bool?,
      json['name'] as String?,
      json['involvedHourTypes'] as String?,
      json['maximumAmount'] as String?,
      json['normalSpecialTaxrate'] as String?,
      json['oLWGVArbeidsongeschiktheid'] as bool?,
      json['oLWGVKantoorkosten'] as bool?,
      json['oLWGVLeeglooprisico'] as bool?,
      json['pensioenCordaresBouw'] as bool?,
      json['pensioenCordaresFranchises'] as bool?,
      json['pensioenCordaresUTA'] as bool?,
      json['pensioenStiPPBasis'] as bool?,
      json['pensioenStiPPMaxhourlyrate'] as bool?,
      json['pensioenStiPPPlusfranchise'] as bool?,
      json['pensioenStiPPPlusregeling'] as bool?,
      json['rCPAddPerHour'] as bool?,
      json['rCPAdditionGrossMargin'] as bool?,
      json['reimbursement_Withdrawal'] as String?,
      json['reserveringADV'] as bool?,
      json['reserveringFD'] as bool?,
      json['reserveringKV'] as bool?,
      json['reserveringPension'] as bool?,
      json['reserveringTVT'] as bool?,
      json['reserveringVDB'] as bool?,
      json['reserveringVDW'] as bool?,
      json['reserveringVG'] as bool?,
      json['reserveringWDC'] as bool?,
      json['sLSectorpremie'] as bool?,
      json['sLWaoWiaInclKinderopvang'] as bool?,
      json['sLWhkWgaFlex'] as bool?,
      json['sLWhkWgaVast'] as bool?,
      json['sLWhkZwFlex'] as bool?,
      json['sLWW'] as bool?,
      json['sLZvw'] as bool?,
      json['taxedUntaxed'] as String?,
      json['isUpsertApp'] as bool?,
      json['isGetLEorg'] as bool?,
      json['amountCostPerUnit'] as String?,
      json['description'] as String?,
      json['maximumAmountCostPerUnit'] as String?,
      (json['maximumAmountUnitsPerDay'] as num?)?.toDouble(),
      json['amountUnitsPerAllocation'] as int?,
      json['maximum_amount_cost_per_tp'] as String?,
      json['maximumAmountCostPerAllocation'] as String?,
      json['invoicePercentage'] as String?,
      json['maximumAmountUnitsPerAllocation'] as String?,
      json['overPercentage'] as String?,
      (json['maximum_amount_units_per_tp'] as num?)?.toDouble(),
      json['payrolPercentage'] as int?,
      json['expenseCreationType'] as String?,
      json['visibleOnTimesheet'] as bool?,
      json['validFrom'] as String?,
      json['validTo'] as String?,
      json['abbreviatedName'] as String?,
      json['appliedBehavior'] as String?,
      json['visibilityForCompany'] as String?,
      json['visibilityForEmployee'] as String?,
      json['nameForCompany'] as String?,
      json['nameForEmployee'] as String?,
      json['minimum_amount_cost_per_tp'] as String?,
      json['minimum_amount_units_per_tp'] as String?,
      json['minimum_amount_cost_per_unit'] as String?,
      json['minimum_amount_units_per_day'] as String?,
      json['apply_below_Hourrate'] as String?,
      json['apply_above_Hourrate'] as String?,
      json['useInDistanceCalculation'] as String?,
      json['createdAt'] as String?,
      json['claId'] as String?,
      json['companyId'] as String?,
      json['costPrizeCalculationId'] as String?,
      json['timesheetExpenseTypeId'] as String?,
      json['placementId'] as String?,
      json['employeeId'] as String?,
    );

Map<String, dynamic> _$CpcExpenseTypeConfToJson(CpcExpenseTypeConf instance) =>
    <String, dynamic>{
      'id': instance.id,
      'sfRecordId': instance.sfRecordId,
      'sfLEId': instance.sfLEId,
      'sfOrgId': instance.sfOrgId,
      'aCPAddPerHour': instance.aCPAddPerHour,
      'aCPSpecificComponent1': instance.aCPSpecificComponent1,
      'aCPSpecificComponent2': instance.aCPSpecificComponent2,
      'active': instance.active,
      'additionalRows': instance.additionalRows,
      'allocation': instance.allocation,
      'allowed_Days_of_Week': instance.allowedDaysOfWeek,
      'allowed_Number_of_Days': instance.allowedNumberOfDays,
      'cAOAanvullingZiektewet': instance.cAOAanvullingZiektewet,
      'cAOScholing': instance.cAOScholing,
      'cAOSocialFounds': instance.cAOSocialFounds,
      'cCPAddPerHour': instance.cCPAddPerHour,
      'cCPAdditionOfAgencyFactor': instance.cCPAdditionOfAgencyFactor,
      'name': instance.name,
      'involvedHourTypes': instance.involvedHourTypes,
      'maximumAmount': instance.maximumAmount,
      'normalSpecialTaxrate': instance.normalSpecialTaxrate,
      'oLWGVArbeidsongeschiktheid': instance.oLWGVArbeidsongeschiktheid,
      'oLWGVKantoorkosten': instance.oLWGVKantoorkosten,
      'oLWGVLeeglooprisico': instance.oLWGVLeeglooprisico,
      'pensioenCordaresBouw': instance.pensioenCordaresBouw,
      'pensioenCordaresFranchises': instance.pensioenCordaresFranchises,
      'pensioenCordaresUTA': instance.pensioenCordaresUTA,
      'pensioenStiPPBasis': instance.pensioenStiPPBasis,
      'pensioenStiPPMaxhourlyrate': instance.pensioenStiPPMaxhourlyrate,
      'pensioenStiPPPlusfranchise': instance.pensioenStiPPPlusfranchise,
      'pensioenStiPPPlusregeling': instance.pensioenStiPPPlusregeling,
      'rCPAddPerHour': instance.rCPAddPerHour,
      'rCPAdditionGrossMargin': instance.rCPAdditionGrossMargin,
      'reimbursement_Withdrawal': instance.reimbursementWithdrawal,
      'reserveringADV': instance.reserveringADV,
      'reserveringFD': instance.reserveringFD,
      'reserveringKV': instance.reserveringKV,
      'reserveringPension': instance.reserveringPension,
      'reserveringTVT': instance.reserveringTVT,
      'reserveringVDB': instance.reserveringVDB,
      'reserveringVDW': instance.reserveringVDW,
      'reserveringVG': instance.reserveringVG,
      'reserveringWDC': instance.reserveringWDC,
      'sLSectorpremie': instance.sLSectorpremie,
      'sLWaoWiaInclKinderopvang': instance.sLWaoWiaInclKinderopvang,
      'sLWhkWgaFlex': instance.sLWhkWgaFlex,
      'sLWhkWgaVast': instance.sLWhkWgaVast,
      'sLWhkZwFlex': instance.sLWhkZwFlex,
      'sLWW': instance.sLWW,
      'sLZvw': instance.sLZvw,
      'taxedUntaxed': instance.taxedUntaxed,
      'isUpsertApp': instance.isUpsertApp,
      'isGetLEorg': instance.isGetLEorg,
      'amountCostPerUnit': instance.amountCostPerUnit,
      'description': instance.description,
      'maximumAmountCostPerUnit': instance.maximumAmountCostPerUnit,
      'maximumAmountUnitsPerDay': instance.maximumAmountUnitsPerDay,
      'amountUnitsPerAllocation': instance.amountUnitsPerAllocation,
      'maximum_amount_cost_per_tp': instance.maximumAmountCostPerTp,
      'maximumAmountCostPerAllocation': instance.maximumAmountCostPerAllocation,
      'invoicePercentage': instance.invoicePercentage,
      'maximumAmountUnitsPerAllocation':
          instance.maximumAmountUnitsPerAllocation,
      'overPercentage': instance.overPercentage,
      'maximum_amount_units_per_tp': instance.maximumAmountUnitsPerTp,
      'payrolPercentage': instance.payrolPercentage,
      'expenseCreationType': instance.expenseCreationType,
      'visibleOnTimesheet': instance.visibleOnTimesheet,
      'validFrom': instance.validFrom,
      'validTo': instance.validTo,
      'abbreviatedName': instance.abbreviatedName,
      'appliedBehavior': instance.appliedBehavior,
      'visibilityForCompany': instance.visibilityForCompany,
      'visibilityForEmployee': instance.visibilityForEmployee,
      'nameForCompany': instance.nameForCompany,
      'nameForEmployee': instance.nameForEmployee,
      'minimum_amount_cost_per_tp': instance.minimumAmountCostPerTp,
      'minimum_amount_units_per_tp': instance.minimumAmountUnitsPerTp,
      'minimum_amount_cost_per_unit': instance.minimumAmountCostPerUnit,
      'minimum_amount_units_per_day': instance.minimumAmountUnitsPerDay,
      'apply_below_Hourrate': instance.applyBelowHourrate,
      'apply_above_Hourrate': instance.applyAboveHourrate,
      'useInDistanceCalculation': instance.useInDistanceCalculation,
      'createdAt': instance.createdAt,
      'claId': instance.claId,
      'companyId': instance.companyId,
      'costPrizeCalculationId': instance.costPrizeCalculationId,
      'timesheetExpenseTypeId': instance.timesheetExpenseTypeId,
      'placementId': instance.placementId,
      'employeeId': instance.employeeId,
    };
